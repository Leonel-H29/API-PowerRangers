name: 'Docker Containers'
#description: 'Build & check docker containers'
on:
  push:
    branches:
      - test # Decido que se ejecute sobre la rama de prueba
  #Permitir ejecutar las acciones manualmente
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      #Crea el archivo de entorno para el proyecto
      - name: Create 'prod.env' file  y el archivo donde extraigo los datos
        run: |
          touch Data.xls
          echo "SECRET_KEY=githubaction-django-test" > prod.env
          echo "DB_NAME=postgres" >> prod.env
          echo "DB_USER=postgres" >> prod.env
          echo "DB_PASSWORD=postgres" >> prod.env
          echo "DB_HOST=database" >> prod.env
          echo "DB_PORT=5432" >> prod.env
          echo "POSTGRES_USER=postgres" >> prod.env
          echo "POSTGRES_PASSWORD=postgres" >> prod.env
          echo "POSTGRES_DB=postgres" >> prod.env
          echo "API_HOST=localhost" >> prod.env
          echo "API_PORT=8000" >> prod.env
          echo "FILE_DATA=Data.xls" >> prod.env
          echo "DJANGO_SUPERUSER_EMAIL=admin@admin.com" >> prod.env
          echo "DJANGO_SUPERUSER_USERNAME=admin" >> prod.env
          echo "DJANGO_SUPERUSER_PASSWORD=123456" >> prod.env
          echo "PGADMIN_DEFAULT_EMAIL=admin@admin.com" >> prod.env
          echo "PGADMIN_DEFAULT_USERNAME=admin" >> prod.env
          echo "PGADMIN_DEFAULT_PASSWORD=123456" >> prod.env

      - name: Build and run containers

        run: |
          docker-compose -f "docker-compose.yml" up -d --build 
          docker ps

      - name: Check containers
        #Cuento la cantidad de lineas que devuelve el comando 'docker-ps' y le resto 1 por la cabecera
        #De esta manera obtengo la cantidad de contenedores levantados
        run: |
          RUNNING_CONTAINERS=$(docker ps | wc -l)
          RUNNING_CONTAINERS=$((RUNNING_CONTAINERS-1))
          if [ "$RUNNING_CONTAINERS" -eq 0 ] || [ "$RUNNING_CONTAINERS" -lt 4 ]; then
            echo "ERROR: Failed to create containers"
            exit 1
          else
            echo "SUCCESSFUL!"
          fi

      #Muestro los logs de cada contenedor
      - name: Show container's logs

        run: |
          docker logs db_postgres
          docker logs pg_admin
          docker logs apirest_djangorf
          docker logs nginx
