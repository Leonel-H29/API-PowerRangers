version: '3.7'
services:
  # Django Backend
  apirest:
    ports:
      - 8000:8000
    restart: always
    env_file:
      - prod.env
    container_name: apirest_djangorf
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
    volumes:
      - .:/app
      - static:/api/static_files
    image: backend:1.0
    networks:
      - apirest-network

  # Database PostgreSQL
  database:
    image: postgres:13.3-alpine
    container_name: db_postgres
    restart: unless-stopped
    env_file:
      - prod.env
    volumes:
      - database:/var/lib/postgresql/data
      - ./api/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5430:5432
    networks:
      - apirest-network

  # pgAdmin para administraci√≥n de PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    #restart: always
    container_name: pg_admin
    env_file:
      - prod.env
    ports:
      #- 5050:5353
      - 5050:80
    depends_on:
      - database
    networks:
      - apirest-network

  # Servidor nginx
  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static:/api/static_files
    image: nginx:1.0
    depends_on:
      - pgadmin
      - apirest
    networks:
      - apirest-network

volumes:
  database:
  static:
networks:
  apirest-network:
    driver: bridge
